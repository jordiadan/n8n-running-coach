name: Deploy n8n to Fly (production)

on:
  workflow_dispatch:
    inputs:
      app:
        description: "Nombre del app en Fly"
        required: true
        default: "running-coach-n8n"   # c√°mbialo si tu app prod se llama distinto
      region:
        description: "Regi√≥n Fly (opcional)"
        required: false
        default: "fra"

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      N8N_ENCRYPTION_KEY: ${{ secrets.N8N_ENCRYPTION_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Verifica secretos requeridos
        run: |
          set -e
          [ -z "$FLY_API_TOKEN" ] && { echo "‚ùå Falta FLY_API_TOKEN en GitHub Secrets"; exit 1; }
          [ -z "$N8N_ENCRYPTION_KEY" ] && { echo "‚ùå Falta N8N_ENCRYPTION_KEY en GitHub Secrets"; exit 1; }

      - name: Crea volumen si no existe
        run: |
          set -e
          # intenta crear un volumen n8n_data si no existe
          if ! flyctl volumes list -a "${{ github.event.inputs.app }}" | grep -q 'n8n_data'; then
            echo "üß± creando volumen n8n_data"
            flyctl volumes create n8n_data -a "${{ github.event.inputs.app }}" --region "${{ github.event.inputs.region }}" --size 1
          else
            echo "‚úÖ volumen n8n_data ya existe"
          fi

      - name: Asegura N8N_ENCRYPTION_KEY en Fly
        run: |
          set -e
          if ! flyctl secrets list -a "${{ github.event.inputs.app }}" | grep -q '^N8N_ENCRYPTION_KEY\b'; then
            echo "üîê seteando N8N_ENCRYPTION_KEY en Fly app"
            flyctl secrets set N8N_ENCRYPTION_KEY="${N8N_ENCRYPTION_KEY}" -a "${{ github.event.inputs.app }}"
          else
            echo "‚úÖ N8N_ENCRYPTION_KEY ya est√° configurado en Fly"
          fi

      - name: Deploy
        run: |
          set -e
          # Si tu fly.toml est√° preparado para prod, basta con:
          flyctl deploy -a "${{ github.event.inputs.app }}" --config fly.toml
