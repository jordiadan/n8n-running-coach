name: CI (n8n) & Deploy to Prod

on:
  push:
    branches: [ main ]
  create:
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

jobs:
  test-ci:
    name: Run n8n in CI and import workflows
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Arrancamos n8n nosotros mismos (sin services:) para poder inyectar bien los secrets
      - name: Start n8n (Docker) with secrets
        env:
          N8N_ENCRYPTION_KEY: ${{ secrets.N8N_ENCRYPTION_KEY }}
        run: |
          set -e
          if [ -z "$N8N_ENCRYPTION_KEY" ]; then
            echo "❌ Missing GitHub secret N8N_ENCRYPTION_KEY"; exit 1
          fi

          docker run -d --name n8n-ci \
            -p 5678:5678 \
            -e N8N_HOST="0.0.0.0" \
            -e N8N_PORT="5678" \
            -e N8N_BASIC_AUTH_ACTIVE="false" \
            -e GENERIC_TIMEZONE="Europe/Madrid" \
            -e N8N_ENCRYPTION_KEY="$N8N_ENCRYPTION_KEY" \
            n8nio/n8n:1.78.1

      - name: Wait for n8n (up to 5 min)
        run: |
          for i in {1..150}; do
            if curl -fsS http://localhost:5678/ >/dev/null; then
              echo "✅ n8n up"; exit 0
            fi
            if [ $((i%10)) -eq 0 ]; then
              echo "⏳ still waiting... ($i)"
              docker logs --tail 80 n8n-ci || true
            fi
            sleep 2
          done
          echo "❌ n8n didn't start in time"
          docker ps -a
          docker logs n8n-ci || true
          exit 1

      - name: Install n8n CLI
        run: npm i -g n8n@1.78.1

      - name: Import workflows into local n8n
        run: |
          shopt -s nullglob
          FILES=(workflows/*.json)
          [ ${#FILES[@]} -eq 0 ] && echo "No workflows to import" && exit 0
          n8n import:workflow --input="workflows/*.json" --url "http://localhost:5678"
          n8n list:workflow --url "http://localhost:5678"

      - name: Teardown (always)
        if: always()
        run: |
          docker logs --tail 200 n8n-ci || true
          docker rm -f n8n-ci || true

  deploy-prod:
    name: Deploy to Fly (prod) & import workflows
    needs: [test-ci]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-running-coach-n8n-prod
      cancel-in-progress: true
    environment:
      name: production
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      FLY_APP: running-coach-n8n

    steps:
      - uses: actions/checkout@v4

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to PROD (tagged commit)
        run: flyctl deploy -a "$FLY_APP" --config fly.toml

      - name: Wait health checks (PROD)
        run: |
          for i in {1..36}; do
            NOT_OK=$(flyctl checks list -a "$FLY_APP" | awk 'NR>1 {print $3}' | grep -v passing || true)
            if [ -z "$NOT_OK" ]; then echo "✅ PROD healthy"; exit 0; fi
            echo "⏳ Waiting PROD health checks..."
            sleep 5
          done
          echo "⚠️ PROD checks not fully passing (continuing)"

      - name: Detect changed workflows
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            wf:
              - 'workflows/**.json'

      - name: Install jq & n8n CLI (only if workflows changed)
        if: steps.changes.outputs.wf == 'true'
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          npm i -g n8n@1.78.1

      - name: Import workflows to PROD (only if changed)
        if: steps.changes.outputs.wf == 'true'
        env:
          N8N_BASIC_AUTH_USER: ${{ secrets.N8N_BASIC_AUTH_USER }}
          N8N_BASIC_AUTH_PASSWORD: ${{ secrets.N8N_BASIC_AUTH_PASSWORD }}
        run: |
          set -e
          HOST=$(flyctl status -a "$FLY_APP" --json | jq -r '.Hostname // .App.Hostname')
          [ -n "$HOST" ] || { echo "❌ Could not resolve PROD hostname"; exit 1; }
          AUTH=""
          if [ -n "$N8N_BASIC_AUTH_USER" ] && [ -n "$N8N_BASIC_AUTH_PASSWORD" ]; then
            AUTH="--user $N8N_BASIC_AUTH_USER --password $N8N_BASIC_AUTH_PASSWORD"
          fi
          shopt -s nullglob
          FILES=(workflows/*.json)
          [ ${#FILES[@]} -eq 0 ] && echo "No workflows to import" && exit 0
          n8n import:workflow --input="workflows/*.json" --url "https://$HOST" $AUTH
          echo "✅ Imported to PROD"
