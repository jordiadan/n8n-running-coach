name: Run n8n in CI and import workflows

on:
  push:
    branches: [ main ]
    paths:
      - "workflows/**.json"
      - ".github/workflows/n8n-ci-import.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "workflows/**.json"
      - ".github/workflows/n8n-ci-import.yml"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  import-workflows:
    runs-on: ubuntu-latest
    env:
      # Debe existir en GitHub Secrets (Settings ‚Üí Secrets and variables ‚Üí Actions)
      N8N_ENCRYPTION_KEY: ${{ secrets.N8N_ENCRYPTION_KEY }}
      N8N_IMAGE: n8nio/n8n:1.78.1
      N8N_PORT: "5678"
      N8N_HOST: "0.0.0.0"
      TZ: "Europe/Madrid"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate required secrets
        run: |
          set -e
          if [ -z "$N8N_ENCRYPTION_KEY" ]; then
            echo "‚ùå Missing GitHub secret N8N_ENCRYPTION_KEY"
            exit 1
          fi
          echo "‚úÖ Secrets OK"

      - name: Start n8n container (ephemeral CI)
        run: |
          docker run -d --name n8n-ci \
            -p ${N8N_PORT}:${N8N_PORT} \
            -e N8N_HOST="${N8N_HOST}" \
            -e N8N_PORT="${N8N_PORT}" \
            -e N8N_BASIC_AUTH_ACTIVE="false" \
            -e GENERIC_TIMEZONE="${TZ}" \
            -e N8N_ENCRYPTION_KEY="${N8N_ENCRYPTION_KEY}" \
            ${N8N_IMAGE}

          echo "üõ†Ô∏è Running ${N8N_IMAGE}"

      - name: Wait for n8n to be ready
        run: |
          # Espera a que /rest/health devuelva 200
          for i in {1..120}; do
            if curl -fsS "http://localhost:${N8N_PORT}/rest/health" >/dev/null; then
              echo "‚úÖ n8n up"
              exit 0
            fi
            if [ $((i%10)) -eq 0 ]; then
              echo "‚è≥ still waiting... ($i)"
              docker logs --tail 80 n8n-ci || true
            fi
            sleep 2
          done
          echo "‚ùå n8n didn't start in time"
          docker ps -a
          docker logs n8n-ci || true
          exit 1

      - name: Import workflows into the running container
        run: |
          set -e
          shopt -s nullglob
          FILES=(workflows/*.json)
          if [ ${#FILES[@]} -eq 0 ]; then
            echo "No workflows to import"
            exit 0
          fi

          # Copiar JSONs al contenedor
          docker exec n8n-ci mkdir -p /tmp/wf
          docker cp workflows/. n8n-ci:/tmp/wf/

          # Importar DENTRO del contenedor para escribir en su BD local
          docker exec -u node n8n-ci bash -lc '
            set -e
            shopt -s nullglob
            FILES=(/tmp/wf/*.json)
            if [ ${#FILES[@]} -eq 0 ]; then
              echo "No workflows to import"; exit 0
            fi
            echo "üì• Importing ${#FILES[@]} workflows..."
            n8n import:workflow --input "/tmp/wf/*.json" --overwrite
            echo "----- Workflows in instance -----"
            n8n list:workflow
          '

      # (Opcional) aqu√≠ podr√≠as llamar tus tests end-to-end contra http://localhost:5678

      - name: Logs (on failure too)
        if: always()
        run: |
          echo "----- n8n-ci last logs -----"
          docker logs --tail 200 n8n-ci || true

      - name: Cleanup container
        if: always()
        run: |
          docker rm -f n8n-ci || true
