name: Deploy n8n to Fly.io

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  APP: running-coach-n8n           # <-- tu nombre de app en Fly
  REGION: fra                      # <-- tu región de Fly (p.ej. fra, mad, cdg...)

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Comprobar secrets requeridos
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          N8N_ENCRYPTION_KEY: ${{ secrets.N8N_ENCRYPTION_KEY }}
        run: |
          if [ -z "${FLY_API_TOKEN:-}" ]; then
            echo "❌ Falta FLY_API_TOKEN"; exit 1
          fi
          if [ -z "${N8N_ENCRYPTION_KEY:-}" ]; then
            echo "❌ Falta N8N_ENCRYPTION_KEY"; exit 1
          fi
          echo "✅ Secrets presentes"

      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Autenticación en Fly
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl auth token "$FLY_API_TOKEN"
          flyctl auth whoami

      - name: Actualizar secret en Fly (idempotente)
        env:
          N8N_ENCRYPTION_KEY: ${{ secrets.N8N_ENCRYPTION_KEY }}
        run: |
          # Esto actualiza/crea el secret si cambia. No “rompe” aunque ya exista.
          flyctl secrets set N8N_ENCRYPTION_KEY="$N8N_ENCRYPTION_KEY" --app "$APP" --region "$REGION" --yes

      - name: Deploy a Fly
        run: |
          # --remote-only delega el build al builder de Fly (más estable en CI)
          flyctl deploy --app "$APP" --region "$REGION" --remote-only --yes

      - name: Estado de la app
        run: |
          flyctl status --app "$APP"
          flyctl releases --app "$APP" --limit 5
